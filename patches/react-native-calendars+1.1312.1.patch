diff --git a/node_modules/react-native-calendars/src/agenda/reservation-list/index.js b/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
index 3917729..e112400 100644
--- a/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
+++ b/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
@@ -1,13 +1,13 @@
 import isFunction from 'lodash/isFunction';
 import PropTypes from 'prop-types';
-import XDate from 'xdate';
 import React, { Component } from 'react';
-import { ActivityIndicator, View, FlatList } from 'react-native';
+import { ActivityIndicator, FlatList, View } from 'react-native';
+import XDate from 'xdate';
 import { extractReservationProps } from '../../componentUpdater';
 import { sameDate } from '../../dateutils';
 import { toMarkingFormat } from '../../interface';
-import styleConstructor from './style';
 import Reservation from './reservation';
+import styleConstructor from './style';
 class ReservationList extends Component {
     static displayName = 'ReservationList';
     static propTypes = {
@@ -51,12 +51,14 @@ class ReservationList extends Component {
         this.updateDataSource(this.getReservations(this.props).reservations);
     }
     componentDidUpdate(prevProps) {
-        if (this.props.topDay && prevProps.topDay && prevProps !== this.props) {
-            if (!sameDate(prevProps.topDay, this.props.topDay)) {
-                this.setState({ reservations: [] }, () => this.updateReservations(this.props));
-            }
-            else {
-                this.updateReservations(this.props);
+        if (this.props.topDay && prevProps.topDay) {
+            if (this.props.showOnlySelectedDayItems !== prevProps.showOnlySelectedDayItems || this.props.items !== prevProps.items || !sameDate(this.props.selectedDay, prevProps.selectedDay)) {
+                if (!sameDate(prevProps.topDay, this.props.topDay)) {
+                    this.setState({ reservations: [] }, () => this.updateReservations(this.props));
+                }
+                else {
+                    this.updateReservations(this.props);
+                }
             }
         }
     }
